!!! 5
html
  head
    title='Hypem Player'
    link(rel="stylesheet", type="text/css", href="css/style.css")
    script( type="text/javascript", charset="utf-8", src='js/jquery.min.js')
    script(type="text/javascript", src="js/underscore.min.js")
    script(src='cordova-2.7.0.js')
  body
    div.container
      div.songInfo
        div.songName
          p#songName
        div.songArtist
          p#songArtist
      div.songArtwork
        img#songArtwork()

      div.mediaPlayer
        audio#player(controls)
      div.mediaControl
        button#nextSong(type="button") ->
        button#previousSong(type='button') <-

      div#playListController
        button#popular(type='button', disabled) Popular
        button#latest(type="button") Latest

    :coffeescript

      class Player
        constructor: () ->
          @playlist = []
          @currentList = 'popular'
          @currentPage = 1
          @currentSong = 0

          @hypemPrefixAPI = 'http://hypem.com/playlist/'
          @hypemMidAPI = '/all/json/'
          @hypemSufixAPI = '/data.js'
          @initialize()

        initialize: () =>
          @getPlayList()


        getPlayList: () =>
          $.get @hypemPrefixAPI + @currentList + @hypemMidAPI + @currentPage + @hypemSufixAPI, (res) =>
              for key in _.keys res
                  if key != 'version'
                      @playlist.push {mediaid: res[key].mediaid, photo: res[key].thumb_url_large, artist: res[key].artist, title: res[key].title}
              @getSongUrl()
          , 'json'

        getSongUrl: () =>
          $.get 'http://hypem-server.herokuapp.com/?mediaid=' + @playlist[@currentSong].mediaid, (res) =>
              console.log res.url
              @playerController(res.url)
          , 'jsonp'

        playerController: (url) =>
          $('#player').attr 'src', url
          $('#songName').text(@playlist[@currentSong].title)
          $('#songArtist').text(@playlist[@currentSong].artist)
          $('#songArtwork').attr 'src', @playlist[@currentSong].photo

        nextSongController: () =>
          @currentSong += 1
          if (@currentSong != 0 and @currentSong%30 == 0)
              @currentSong += 1
              @getPlayList()
          else
              @getSongUrl()

        previousSongController: () =>
          if @currentSong != 0
              @currentSong -= 1
              @getSongUrl()

        playListController: (playlist) =>
          @currentList = playlist
          @playlist = []
          @currentPage = 1
          @currentSong = 0
          @getPlayList()

        getCurrentPlaylist: () =>
          @currentList

      player = new Player

      $('#playListController').click (e) ->
        if e.target.id != 'playListController' and e.target.id != player.getCurrentPlaylist()
          $('#' + player.getCurrentPlaylist()).removeAttr 'disabled'
          player.playListController(e.target.id)
          $('#' + e.target.id).attr 'disabled', 'disabled'

      $('#nextSong').click (e) ->
        player.nextSongController()

      $('#previousSong').click (e) ->
        player.previousSongController()

      $('#player').bind 'ended', () ->
        player.nextSongController()



